---
const links = [
    { href: "/projects", label: "work" },
    { href: "/contact", label: "contact" },
    { href: "/cv", label: "CV" },
];

const { page } = Astro.props;

enum HeaderType {
    "Projects" = "projects",
    "Project" = "project",
    "Home" = "home",
}

const type = ((page) => {
    if (/^\/?projects$/g.test(page)) return HeaderType.Projects;
    if (/^\/?projects\/(.*?)/g.test(page)) return HeaderType.Project;
    return HeaderType.Home;

})(page);
---

<header
    class:list={[{
            "header--type-project": type == HeaderType.Projects || type == HeaderType.Project
        },
    ]}
    class="header w-full"
>
    <nav 
        class:list={[{
            "boxed": type !== HeaderType.Project
        },
    ]}
    class="flex flex-col md:flex-row items-center flex-wrap justify-between gap-4 border border-red py-4">
        <div
            transition:name={`logo`}
            transition:animate="none"
            class="flex-1 border border-red-500 will-change-transform"
            class:list={[{'-translate-x-[500px]': type == HeaderType.Project}]}
        >
            <h1 class="text-2xl">STD</h1>
        </div>
        <div class="flex-[3] border border-blue-500">&nbsp;</div>
        <ul
            transition:name={`nav-right`}
            transition:animate="none"
            class="flex-1 flex flex-row justify-end items-center gap-4 border border-red-500 will-change-transform"
            class:list={[{'translate-x-[500px]': type == HeaderType.Project}]}
        >
            {
                links.map((link) => (
                    <li>
                        <a href={link.href}>{link.label}</a>
                    </li>
                ))
            }
        </ul>
    </nav>
</header>

<style is:inline></style>
