---
import '../app.css'
import '../view-transitions.css'
import DebugButton from '@components/DebugButton'
import FooterComponent from "@components/layouts/FooterComponent";
import Theme from '@components/ThemeProvider'


interface Props {
	title: string;
}

enum HeaderType {
    "Projects" = "projects",
    "Project" = "project",
    "Home" = "home",
}

const links = [
	{ href: "/projects", label: "work" },
	{ href: "/about", label: "contact" },
	{ href: "/cv", label: "CV" },
];

const { title } = Astro.props;
const currentPath = Astro.url.pathname;

const type = ((page) => {
	if (/^\/?projects$/g.test(page)) return HeaderType.Projects;
	if (/^\/?projects\/(.*?)/g.test(page)) return HeaderType.Project;
	return HeaderType.Home;

})(currentPath);


---

<!doctype html>
<html lang="fr">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script src="../../scripts/navigation.js"></script>
	</head>
	<body>
		<Theme>
        <div id="wrapper" class="wrapper min-h-screen h-screen flex flex-col dark:bg-stone-800 dark:text-stone-300 dark:bg-blend-multiply">
			<header class="header w-full relative z-30"
				class:list={[
					{'header--type-projects': type == HeaderType.Projects},
					{'header--type-project': type == HeaderType.Project},
					{'header--type-home': type == HeaderType.Home}
				]}
			>
				<nav
					class="flex flex-row items-center flex-wrap justify-between gap-4 p-4 sm:py-4"
					class:list={[{boxed : type !== HeaderType.Project}]}>
					
					<div
						class="flex-1 will-change-transform with-transition"
						class:list={[{'-translate-x-[500px]': type == HeaderType.Project}]}
						data-transition-name="main-nav-logo"
					>

						<a href="/">
							<h1 class="font-sans uppercase text-lg">ST.ST <small class="font-serif lowercase text-base">Designs</small>,</h1>
						</a>

					</div>
					<div class="flex-[3]"></div>
					<ul
						class="flex-1 flex flex-row justify-end items-center gap-4 will-change-transform with-transition"
						class:list={[{'translate-x-[500px]': type == HeaderType.Project}]}
						data-transition-name="main-nav-links"
					>
						{
							links.map((link) => (
								<li>
									<a class="font-sans uppercase text-sm" href={link.href}>{link.label}</a>
								</li>
							))
						}
					</ul>
				</nav>

					<div class="flex flex-col justify-center ml-3">
						<input type="checkbox" name="light-switch" class="light-switch sr-only" />
						<label class="relative cursor-pointer p-2" for="light-switch">
							<svg class="dark:hidden" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
								<path class="fill-slate-300" d="M7 0h2v2H7zM12.88 1.637l1.414 1.415-1.415 1.413-1.413-1.414zM14 7h2v2h-2zM12.95 14.433l-1.414-1.413 1.413-1.415 1.415 1.414zM7 14h2v2H7zM2.98 14.364l-1.413-1.415 1.414-1.414 1.414 1.415zM0 7h2v2H0zM3.05 1.706 4.463 3.12 3.05 4.535 1.636 3.12z" />
								<path class="fill-slate-400" d="M8 4C5.8 4 4 5.8 4 8s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4Z" />
							</svg>
							<svg class="hidden dark:block" width="16" height="16" xmlns="http://www.w3.org/2000/svg">
								<path class="fill-slate-400" d="M6.2 1C3.2 1.8 1 4.6 1 7.9 1 11.8 4.2 15 8.1 15c3.3 0 6-2.2 6.9-5.2C9.7 11.2 4.8 6.3 6.2 1Z" />
								<path class="fill-slate-500" d="M12.5 5a.625.625 0 0 1-.625-.625 1.252 1.252 0 0 0-1.25-1.25.625.625 0 1 1 0-1.25 1.252 1.252 0 0 0 1.25-1.25.625.625 0 1 1 1.25 0c.001.69.56 1.249 1.25 1.25a.625.625 0 1 1 0 1.25c-.69.001-1.249.56-1.25 1.25A.625.625 0 0 1 12.5 5Z" />
							</svg>
							<span class="sr-only">Switch to light / dark version</span>
						</label>
					</div>
				
			</header>

		
            <main class="flex-1 relative with-transition">
                <slot />
            </main>

            <FooterComponent client:only="react">
				<p class="text-sm font-normal">©2024 Stéphane Stadler </p>
			</FooterComponent>

        </div>
		
		<!-- <DebugButton client:only="react"> -->

		
		</Theme>	
	</body>
</html>

