---
import Layout from "@layouts/Layout.astro";
import type Project from "@interfaces/project";
import  {schema as projectSchema} from "@interfaces/project";
import SectionsComponent from "@components/details/SectionsComponent";
import ProjectDescription from "@components/details/ProjectDescription";

const { slug } = Astro.params;

let project: Project;

try {
	const query = {
		method: "POST",
		headers: { "Content-Type": "application/json" },
		body: JSON.stringify({
			query: `query GetProjectBySlugQuery($slug: String!) {
				project(where: {slug: $slug}) {
					${projectSchema()}
				}
			}`,
            variables: { slug }
		}),
	};

	const response = await fetch(import.meta.env.ASTRO_APP_HYGRAPH_ENDPOINT, query);
	const json = await response.json();

	project = json.data.project;

	if (!project) throw new Error("404 - Not Found");

} catch (error) {
	return Astro.redirect("/404");
}


const query2 = {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
        query: `
      {
        projects(first: 100) {
			${projectSchema()}
        }
      }`,
    }),
};

const response2 = await fetch(import.meta.env.ASTRO_APP_HYGRAPH_ENDPOINT, query2);
const json2 = await response2.json();
const projects: Project[] = json2.data.projects;

console.log( ` Mon current project : ${project.slug}`)

const projectsLength = projects.length;
console.log(` length  :  ${projectsLength}`)

const projectIndex = projects.findIndex(p => p.slug === project.slug);
console.log(` Test  :  ${projectIndex}`)

const currentProject = projects[projectIndex];
const nextProject = projects[projectIndex + 1] ?? null;
console.log(projects.map(p => p.slug).join(', '))
console.log(` current ${currentProject}`);
console.log(` next ${nextProject}`);



---



<Layout title="My main page">
    <div class="project-list boxed w-full flex flex-row justify-start gap-4 dark:bg-stone-800 dark:text-stone-300">
        <!-- left-col -->
        <div class="md:flex-1"></div>
        <!-- center-col -->
        <div class="md:flex-[3] relative">
            <div class="card md:max-w-lg flex flex-col mx-auto items-center">
                {project.image &&                                
                    project.featuredType === "Image" && (
                        <div class="image-container" data-persist-container="true">
                            <a href={`/projects/${project.slug}/`} data-name="project__a" data-id={project.id}>
                                <img
                                    class="card-media w-full h-full"
                                    data-transition-name="card-media"
                                    data-persist="true"
                                    src={project.image.url}
                                    alt={project.image.fileName}
                                />
                            </a>
                        </div>
                    )                                                                    
                }
                {project.image && 
                    project.featuredType === "Video" && (
                        <div class="video-container" data-persist-container="true">
                            <a  href={`/projects/${project.slug}/`} data-name="project__a" data-id={project.id} >
                                <video
                                    loop
                                    muted
                                    autoplay
                                    class="card-media w-full h-full"
                                    data-transition-name="card-media"
                                    data-persist="true"
                                    >
                                    <source src={project.image.url} type="video/mp4" />
                                </video>
                            </a>
                        </div>
                    )
                }
            </div>

            <a href="/projects" class="fixed top-5 left-5 z-[999] inline-flex h-12 w-12 p-4 bg-stone-200 dark:bg-stone-900 rounded-full items-center hover:scale-95 transition-all duration-200 text-lg mix-blend-difference">&larr;</a>

            <div class="flex flex-col ">
                <div class="font-sans text-lg max-w-xl text-balance pt-20 pb-10" data-transition-name="project-description">
                    {project.name},
                    <br>
                    <p class="text-balance">
                        {project.excerpt}
                    </p>
    
                </div>
                <!-- <div class="p-8 font-serif font-normal text-lg text-balance">{project.excerpt}</div> -->
                
            </div>
        </div>

        <!-- right col -->

        <div class="flex-1"></div>
    </div>

    {project && (
            <SectionsComponent
                project={project}
                client:only="react"
            />
        )
    }


 

    <section class="flex flex-col sm:flex-row w-full max-w-full justify-start sm:gap-8  pb-44 pt-10 px-5 space-y-10 sm:space-y-0 dark:bg-stone-800 dark:text-stone-300z">
        <div>
            <ProjectDescription project={project} client:only="react">
        </div>
        <div class="flex flex-col gap-1">
            <div class="flex flex-row space-x-0.5 mb-2 items-baseline ">
                <p class="font-serif text-xs uppercase min-w-24">client</p> 
                <h3 class="capitalize">{project.client}</h3>
            </div>
            
                <div class="flex flex-row space-x-0.5 mb-2 items-baseline ">
                    {project.tags && project.tags.length > 1 && (
                    <p class="font-serif text-xs uppercase min-w-24">services</p> 
                        <ul class="flex flex-col font-sans text-sm space-y-0.5">
                            {project.tags.map((tag) => (
                                <li>{tag.projectTag.name}</li>
                            ))}
                        </ul>
                    )}
                </div>
        </div>
    </section>

    <section>

        { nextProject &&  (
            <div class="card md:max-w-lg flex flex-col mx-auto items-center">
                {nextProject.image &&                                
                    nextProject.featuredType === "Image" && (
                        <div class="image-container" data-persist-container="true">
                            <a href={`/projects/${nextProject.slug}/`} data-name="project__a" data-id={nextProject.id} >
                                <img
                                    class="card-media w-full h-full"
                                    data-transition-name="card-media"
                                    data-persist="true"
                                    src={nextProject.image.url}
                                    alt={nextProject.image.fileName}
                                />
                            </a>
                        </div>
                    )                                                                    
                }
                {nextProject.image && 
                    nextProject.featuredType === "Video" && (
                        <div class="video-container" data-persist-container="true">
                            <a  href={`/projects/${nextProject.slug}/`} data-name="project__a" data-id={nextProject.id}  >
                                <video
                                    loop
                                    muted
                                    autoplay
                                    class="card-media w-full h-full"
                                    data-transition-name="card-media"
                                    data-persist="true"
                                    >
                                    <source src={nextProject.image.url} type="video/mp4" />
                                </video>
                            </a>
                        </div>
                    )
                }
            </div>
        )}
    </section>
        

</Layout>